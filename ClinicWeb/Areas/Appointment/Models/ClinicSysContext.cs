// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ClinicWeb.Areas.Appointment.Models;

public partial class ClinicSysContext : DbContext
{
    public ClinicSysContext(DbContextOptions<ClinicSysContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ApptClinicList> ApptClinicList { get; set; }

    public virtual DbSet<ApptPatientStateRef> ApptPatientStateRef { get; set; }

    public virtual DbSet<MemberEmployeeList> MemberEmployeeList { get; set; }

    public virtual DbSet<MemberMemberList> MemberMemberList { get; set; }

    public virtual DbSet<RoomList> RoomList { get; set; }

    public virtual DbSet<RoomTypeList> RoomTypeList { get; set; }

    public virtual DbSet<ScheduleClinicInfo> ScheduleClinicInfo { get; set; }

    public virtual DbSet<ScheduleClinicTime> ScheduleClinicTime { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ApptClinicList>(entity =>
        {
            entity.Property(e => e.PatientStateId).HasDefaultValueSql("((8))");

            entity.HasOne(d => d.Clinic).WithMany(p => p.ApptClinicList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Appt_ClinicList_Schedule_ClinicSchedule");

            entity.HasOne(d => d.Member).WithMany(p => p.ApptClinicList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Appt_ClinicList_Member_MemberList");

            entity.HasOne(d => d.PatientState).WithMany(p => p.ApptClinicList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_掛號叫號_當日門診名單_掛號叫號_看診狀態總表");
        });

        modelBuilder.Entity<ApptPatientStateRef>(entity =>
        {
            entity.HasKey(e => e.PatientStateId).HasName("PK_看診狀態總表");
        });

        modelBuilder.Entity<MemberEmployeeList>(entity =>
        {
            entity.HasKey(e => e.EmpId).HasName("PK_員工資料表_1");
        });

        modelBuilder.Entity<MemberMemberList>(entity =>
        {
            entity.HasKey(e => e.MemberId).HasName("PK_會員資料");
        });

        modelBuilder.Entity<RoomList>(entity =>
        {
            entity.HasOne(d => d.Type).WithMany(p => p.RoomList).HasConstraintName("FK_RoomList_RoomTypeList");
        });

        modelBuilder.Entity<ScheduleClinicInfo>(entity =>
        {
            entity.HasKey(e => e.ClinicInfoId).HasName("PK_Schedule_ClinicList");

            entity.Property(e => e.JumpStatus).HasDefaultValueSql("((0))");
            entity.Property(e => e.LeaveStatus).HasDefaultValueSql("((0))");
            entity.Property(e => e.RegistrationLimit).HasDefaultValueSql("((30))");

            entity.HasOne(d => d.ClincRoom).WithMany(p => p.ScheduleClinicInfo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Schedule_ClinicSchedule_RoomList");

            entity.HasOne(d => d.ClinicTime).WithMany(p => p.ScheduleClinicInfo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Schedule_ClinicSchedule_Schedule_ClinicTime");

            entity.HasOne(d => d.Doctor).WithMany(p => p.ScheduleClinicInfo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Schedule_ClinicInfo_Member_EmployeeList");
        });

        modelBuilder.Entity<ScheduleClinicTime>(entity =>
        {
            entity.HasKey(e => e.ClinicTimeId).HasName("PK_排班系統_門診時段總表");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}