@model IEnumerable<ClinicWeb.Areas.Member.ViewModels.Membermetadata>
@* @model ClinicWeb.Areas.Member.ViewModels.MemberViewModel *@


@section ModulesStyles
{

    <!-- iCheck -->
    <link href="~/vendors/iCheck/skins/flat/green.css" rel="stylesheet">
    <!-- Datatables -->

    <link href="~/vendors/datatables.net-bs/css/dataTables.bootstrap.min.css" rel="stylesheet">
    <link href="~/vendors/datatables.net-buttons-bs/css/buttons.bootstrap.min.css" rel="stylesheet">
    <link href="~/vendors/datatables.net-fixedheader-bs/css/fixedHeader.bootstrap.min.css" rel="stylesheet">
    <link href="~/vendors/datatables.net-responsive-bs/css/responsive.bootstrap.min.css" rel="stylesheet">
    <link href="~/vendors/datatables.net-scroller-bs/css/scroller.bootstrap.min.css" rel="stylesheet">

                            @* <!-- bootstrap-wysiwyg -->
    <link href="~/vendors/google-code-prettify/bin/prettify.min.css" rel="stylesheet"> *@
    <!-- Select2 -->
    <link href="~/vendors/select2/dist/css/select2.min.css" rel="stylesheet">
    <!-- Switchery -->
    <link href="~/vendors/switchery/dist/switchery.min.css" rel="stylesheet">
    <!-- starrr -->
    <link href="~/vendors/starrr/dist/starrr.css" rel="stylesheet">
    <!-- bootstrap-daterangepicker -->
    <link href="~/vendors/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet">
    <!-- PNotify -->
    <link href="~/vendors/pnotify/dist/pnotify.css" rel="stylesheet">
    <link href="~/vendors/pnotify/dist/pnotify.buttons.css" rel="stylesheet">
    <link href="~/vendors/pnotify/dist/pnotify.nonblock.css" rel="stylesheet">
}

<div class="row" style="display: block;">
    <div class="col-md-12">
        <div class="x_panel">
            <!--文字會員資料表處那排-->
            <div class="x_title">
                <h2>會員資料表</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                    <li>
                        <a class="close-link"><i class="fa fa-close"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>

            <!--新增按鈕的排版-->
            <div class="mb-6" style="overflow: auto">
                <div class="col-md-2">
                    <label class="form-label"> </label>
                    <button id="newMembtn" type="button" class="btn btn-primary" data-toggle="modal" data-target="#MemCreate">新增會員</button>
                </div>
            </div>

            <!-- 新增畫面的內容 -->
            <div class="modal fade" id="MemCreate" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
                <div class="modal-dialog modal-lg">
                    <!-- 放置 AntiForgeryToken -->
                    @Html.AntiForgeryToken()
                    <div class="modal-content">
                        <partial name="~/Areas/Member/Views/Partial/_MemberCreatePartial.cshtml" />
                    </div>
                </div>
            </div>

          
            <!--搜尋那塊-->
            <div class="x_content">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card-box table-responsive">

                            <!--修改畫面打開-->
                            <div class="modal fade" id="MemEdit" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content" id="memberedit">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <!--表格處-->
                                <div class="col-sm-12">
                                    <table id="memdatatable" class="table table-striped table-bordered dataTable no-footer" style="width: 100%;" role="grid" aria-describedby="datatable_info">
                                        <thead>
                                            <tr>
                                                <th style="display:none">
                                                    會員id
                                                </th>
                                                <th>
                                                    會員編號
                                                    @*  @Html.DisplayNameFor(model => model.MemberNumber) *@
                                                </th>
                                                <th>
                                                    姓名
                                                    @*  @Html.DisplayNameFor(model => model.Name) *@
                                                </th>
                                                <th>
                                                    性別
                                                    @* @Html.DisplayNameFor(model => model.Gender) *@
                                                </th>
                                                <th>
                                                    血型
                                                    @* @Html.DisplayNameFor(model => model.BloodType) *@
                                                </th>
                                                <th>
                                                    身分證字號
                                                </th>
                                                <th>
                                                    聯絡電話
                                                    @*  @Html.DisplayNameFor(model => model.NationalId) *@
                                                </th>
                                                <th>
                                                    地址
                                                    @*  @Html.DisplayNameFor(model => model.Address) *@
                                                </th>
                                                <th>
                                                    緊急聯絡人
                                                    @* @Html.DisplayNameFor(model => model.Phone) *@
                                                </th>
                                                <th>
                                                    信箱
                                                    @* @Html.DisplayNameFor(model => model.BirthDate) *@
                                                </th>
                                                <th>
                                                    啟用
                                                    @*  @Html.DisplayNameFor(model => model.MemberNumber) *@
                                                </th>
                                                <th>
                                                    操作
                                                    <div id="partialContainer"></div>

                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Modules
{
    <!-- iCheck -->
    <script src="~/vendors/iCheck/icheck.min.js"></script>
    <!-- Datatables -->
    <script src="~/vendors/datatables.net/js/jquery.dataTables.min.js"></script>
    @* <script src="~/lib/datatables/js/jquery.datatables.min.js"></script> *@
    <script src="~/vendors/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="~/vendors/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/vendors/datatables.net-buttons-bs/js/buttons.bootstrap.min.js"></script>
    <script src="~/vendors/datatables.net-buttons/js/buttons.flash.min.js"></script>
    <script src="~/vendors/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/vendors/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="~/vendors/datatables.net-fixedheader/js/dataTables.fixedHeader.min.js"></script>
    <script src="~/vendors/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
    <script src="~/vendors/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/vendors/datatables.net-responsive-bs/js/responsive.bootstrap.js"></script>
    <script src="~/vendors/datatables.net-scroller/js/dataTables.scroller.min.js"></script>
    <script src="~/vendors/jszip/dist/jszip.min.js"></script>
    <script src="~/vendors/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/vendors/pdfmake/build/vfs_fonts.js"></script>
    <!-- Switchery -->
    <script src="~/vendors/switchery/dist/switchery.min.js"></script>
    <!-- PNotify -->
    <script src="~/vendors/pnotify/dist/pnotify.js"></script>
    <script src="~/vendors/pnotify/dist/pnotify.buttons.js"></script>
    <script src="~/vendors/pnotify/dist/pnotify.nonblock.js"></script>

}
@section Scripts {

    @{
        await Html.RenderPartialAsync("~/Views/Shared/_ValidationScriptsPartial.cshtml");
    }
    <script>
        //給強制塞東西

        //顯示會員主畫面資料表
        function QueryMemberInfo() {
            try {
                $('#memdatatable').dataTable({
                    ajax: {
                        type: 'GET',
                        url: ("/Member/Member/MemberGetdata"),
                        dataSrc: function (json) { return json; }
                    },
                    destroy: true,
                    columns: [
                        // { "data": "id", "visible": false },
                        { "data": "會員id", "visible": false },
                        { "data": "會員編號" },
                        { "data": "姓名" },
                        { "data": "性別" },
                        { "data": "血型" },
                        { "data": "身分證字號" },
                        { "data": "聯絡電話" },
                        { "data": "地址" },
                        { "data": "緊急聯絡人" },
                        { "data": "信箱" },
                        { "data": "啟用" },
                        {
                            "data": "修改",
                            "render": function (data, type, row) {
                                return '<button type="button" class="fa fa-edit border:none indexSelector" style="border: none;" data-toggle="modal" data-target="#MemEdit" onclick="handleButtonClick(' + row.會員id + ')"></button>' +
                                    '<button type="button" class="fa fa-file-word-o border:none indexSelector" style="border: none;" data-toggle="modal" data-target="#MemView" onclick="handleViewButtonClick(' + row.會員id + ')"></button>';
                            }
                        }
                    ],
                    fixedHeader: {
                        header: true
                    },
                    language: {
                        url: "https://cdn.datatables.net/plug-ins/1.13.7/i18n/zh-HANT.json"
                    },
                    order: [[1, 'asc']]
                });
            } catch (error) {
                console.error('在初始化會員資料表時發生錯誤:', error);
                new PNotify({
                    title: '錯誤',
                    text: '初始化會員資料表失敗',
                    type: 'error',
                    styling: 'bootstrap3'
                })
                alert('初始化會員資料表失敗');
                return;
            }
        }

        QueryMemberInfo();


        //控制對於密碼輸入欄位眼睛的顯示
        function hideshow() {
            var password = document.getElementById("password1");
            var slash = document.getElementById("slash");
            var eye = document.getElementById("eye");

            if (password.type === 'password') {
                password.type = "text";
                slash.style.display = "block";
                eye.style.display = "none";
            }
            else {
                password.type = "password";
                slash.style.display = "none";
                eye.style.display = "block";
            }

        }
        //新增會員資料相關功能



        //新增會員的按下儲存後
        const btnSubmit = document.querySelector('#saveButton');
        // const divInfo = document.querySelector('#div1');

        //測試每個欄位抓的到值
        // const Name11 = document.querySelector('#userName');
        // btnSubmit.addEventListener('click', async (event) => {
        //     event.preventDefault(); //停止預設行為
        //     console.log(Name11.value);
        // })

        btnSubmit.addEventListener('click', async (event) => {
            event.preventDefault(); //停止預設行為

            //FormData
            const formData = new FormData(document.querySelector('#memberForm'));
            // for (const pair of formData.entries()) {
            //     console.log(pair[0]);
            //     console.log(pair[1]);
            // }
            try {
                const url = '@Url.Content("~/Member/Member/MemberCreate")';
                const token = $('input[name="__RequestVerificationToken"]').val(); // 獲取CSRF令牌
                formData.append("__RequestVerificationToken", token); // 將令牌添加到表單數據中
                const response = await fetch(url, {
                    method: "POST",
                    body: formData
                });
                // 確定有抓到整包formdata
                const data = await response.text();
                // // divInfo.innerHTML = data;
               
            }
            catch {
                new PNotify({
                    title: '錯誤',
                    text: '新增資料失敗',
                    type: 'error',
                    styling: 'bootstrap3'
                })
                alert('新增資料失敗，請洽系統管理員');
                return;
            }





            //新增完成之後要清除剛剛輸入的資料以及跳出新增成功樣式 並且取得最新資料
            clearForm();

            addMemFormClose();
            new PNotify({
                title: '新增成功',
                type: 'success',
                styling: 'bootstrap3'
            });


            //重抓全部資料
            QueryMemberInfo();


        });



        //關閉#addApptForm視窗
        function addMemFormClose() {
            $('#MemCreate').modal('hide');
        }

        // 關閉新增會員的表單後要清上面的資料 一定要放在所有新增相關動作的後面
        function clearForm() {
            document.getElementById('memberForm').reset();

        }
        document.getElementById('closeButton').addEventListener('click', function () {
            clearForm();
        });

        document.getElementById('saveButton').addEventListener('click', function () {
            clearForm();
        });

        //抓到該筆編輯資料的索引
        let _index_memdatatable;
        $("#memdatatable tbody").on('click', '.indexSelector', function () {

            //要把tr放進去 才能解決換頁索引值出事的問題
            const selectTr = $(this).closest('tr')
            console.log('新的Row index: ' + $('#memdatatable').DataTable().row(selectTr).index());

            // console.log('Row index: ' + $(this).closest('tr').index());
            _index_memdatatable = $('#memdatatable').DataTable().row(selectTr).index()
            console.log("抓索引值的事件納編所顯示的會員id" + $("#memdatatable").DataTable().row(_index_memdatatable).data().會員id);
            let memberId = $("#memdatatable").DataTable().row(_index_memdatatable).data().會員id;
            // handleButtonClick(memberId, _index_memdatatable );
        });

        //顯示編輯畫面

        async function handleButtonClick(memberId /* _index_memdatatable */) {
            try {
                const response = await fetch(`@Url.Content("~/Member/Member/MemberEdit")?memberId=${memberId}`);
                if (!response.ok) {
                    throw new Error('在取得會員資料並打開編輯畫面出現錯誤，請洽系統管理員');

                }
                const data = await response.text();
                const showplace = document.getElementById("memberedit");
                showplace.innerHTML = data;

                //重新綁定要驗證的表單 為了把編輯的表單跟validation連起來 (因為資料室ajax 過來 validation在資料來之前就在了)
                var form = $('form');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

                //控制編輯按鈕地確認權限的滑輪swichery 一定要寫在請求資料後
                var switcheryOptions = {
                    
                        color: '#64bd63', // 當checked時的背景顏色
                        secondaryColor: '#dfdfdf', // unchecked時的背景顏色
                        jackColor: '#fff', // checked時的按鈕顏色
                        jackSecondaryColor: null, // uncheck時的按鈕顏色
                        className: 'switchery', // class名稱
                        disabled: false, // 是否設為disabled
                        disabledOpacity: 0.5, // 當設為disabled時的透明度
                        speed: '0.1s', // 開關切換的速度
                        size: 'default' // 開關大小(small, default, large)
                };
                new Switchery(document.getElementById('vertificationformem'), switcheryOptions);

                //註冊按鈕事件 要再生成編輯partial之後再加上 不然抓不到這個按鈕事件
                buttonEventFunc(/* memberId,_index_memdatatable */);
            } catch (error) {
                console.error('在取得會員資料並打開編輯畫面出現錯誤，請洽系統管理員:', error);

                // 顯示給使用者
                new PNotify({
                    title: '錯誤',
                    text: '在取得會員資料並打開編輯畫面出現錯誤，請洽系統管理員',
                    type: 'error',
                    styling: 'bootstrap3'
                });

            }
        }





        //確定編輯畫面按下保存有抓到資料
        async function buttonEventFunc(/* memberId, *//* _index_memdatatable */) {
          
            //先抓到當前的頁碼
            const currentPage = $('#memdatatable').DataTable().page()
            console.log("這邊是按下保存後的console log", _index_memdatatable)
            document.getElementById("_MemberEditPartial").addEventListener("submit", async (event) => {
                event.preventDefault(); // 防止表單默認提交行為
                vertification();//打開啟用按鍵所要做出的判斷

                // memdatatable
                const formData = new FormData(document.querySelector('#_MemberEditPartial'));
                let result;

                try {
                    const url = "/Member/Member/Edit";
                    const response = await fetch(url, {
                        "method": "POST",
                        "body": formData
                    });
                    result = await response.json();
                    

                    console.log("顯示剛剛更新的資料", result)
                }
                catch {
                    result = await response.text
                    if(result == "驗證未通過") {
                        return;
                    }

                    new PNotify({
                        title: '錯誤',
                        text: '修改資料失敗',
                        type: 'error',
                        styling: 'bootstrap3'
                    })

                    alert('修改資料失敗，請洽系統管理員');
                    return;
                }



                //確定有抓到整包formdata
                // const data = await response.text();

                //要抓到最新的該筆資料 並更新顯示
                // let result;
                // try {
                //     const responseGetData = await fetch(`/Member/Member/MemberGetdataOne/${memberId}`, { method: "POST" });
                //     result = await responseGetData.json();
                // } catch (e) {
                //     alert('修改資料失敗，請洽系統管理員');
                //     return;
                // }
                //
               
                editMemFormClose();
                new PNotify({
                    title: '修改成功',
                    type: 'success',
                    styling: 'bootstrap3'
                });
                console.log("修改後這邊要抓到", _index_memdatatable);



                const currentPage = $('#memdatatable').DataTable().page()
                //只重繪修改的該row
                $('#memdatatable').DataTable().row(_index_memdatatable).data(result);

                $('#memdatatable').DataTable().page(currentPage).draw('page')

            });
        }


        //關閉#modApptForm視窗
        function editMemFormClose() {
            $("#MemEdit").modal('toggle')

        }

        // // 獲取表單元素
        // var form = event.target;

        // // 獲取表單數據
        // var formData = new FormData(form);

        // // 將數據轉換為對象
        // var formDataObject = {};
        // formData.forEach(function (value, key) {
        //     formDataObject[key] = value;
        // });

        // // 打印表單數據到控制台
        // console.log(formDataObject);






        // 監聽checkbox的變化事件 並加上回傳值
        function vertification() {
            document.getElementById("vertificationformem").addEventListener("change", function (event) {
                // 獲取checkbox的狀態
                var isChecked = event.target.checked;
                var valueToSend = isChecked ? "on" : "off";
            });
        }

        //只重繪修改的該row
        // $('#memdatatable').DataTable().row(_index_memdatatable).data(result).draw();




    </script>

}
